version: '3'
services:
  server:
    image: scanmycode/scanmycode3-ce:server
    restart: always
    environment:
      LIC: 
      SNYK_TOKEN: 
      OPENAI_GPT_API:
    depends_on:
      - postgres
    working_dir: /srv/scanmycode/
    entrypoint: sh
    command: -c "mkdir -p data1/repositories; mkdir -p data2/tasks; mkdir -p setup_state; if [ -f /srv/scanmycode/setup_state/setup_done ]; then curl --silent --output /dev/null https://dl.betterscan.io/run-dockerhub.html; python3.8 /srv/scanmycode/manage.py runserver; else python3.8 /srv/scanmycode/manage.py setup  && touch /srv/scanmycode/setup_state/setup_done; curl --silent --output /dev/null https://dl.betterscan.io/installation-dockerhub.html; fi"
    ports:
      - 5000:5000
    volumes:
      - ./data1:/srv/scanmycode/quantifiedcode/data/
      - ./data2:/srv/scanmycode/quantifiedcode/backend/data/tasks
      - ./setup_state:/srv/scanmycode/setup_state
    links:
      - "postgres"

  postgres:
    image: postgres:13.2
    restart: always
    environment:
      POSTGRES_DB: qc
      POSTGRES_USER: qc
      POSTGRES_PASSWORD: qc
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  worker_1:
    image: scanmycode/scanmycode3-ce:worker
    ulimits:
      stack: -1
    restart: always
    environment:
      LIC: 
      SNYK_TOKEN: 
      OPENAI_GPT_API:
    hostname: worker_1
    depends_on:
      - rabbitmq3
      - postgres
      - server
    working_dir: /srv/scanmycode/
    entrypoint: sh
    command: -c "python3.8 /srv/scanmycode/manage.py runworker"
    volumes:
      - ./data1:/srv/scanmycode/quantifiedcode/data/
      - ./data2:/srv/scanmycode/quantifiedcode/backend/data/tasks
    links:
      - "rabbitmq3"
      - "server"
      - "postgres"  

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=qc
      - RABBITMQ_DEFAULT_PASS=qc
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

volumes:
  db-data:
    driver: local
